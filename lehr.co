# preoder of data on slide 7 of
# http://users.eecs.northwestern.edu/~haizhou/357/lec3.pdf
data =
  node: \V
  left:
    node: \H
    left:
      node: \V
      left:
        node: \H
        left:
          node: 1
        right:
          node: 6
      right:
        node: 2
    right:
      node: \V
      left:
        node: 7
      right:
        node: 5
  right:
    node: \H
    left:
      node: 3
    right:
      node: 4

# adapted from http://blog.pixelingene.com/2011/07/building-a-tree-diagram-in-d3-js/
<-! document.add-event-listener \DOMContentLoaded

tree = d3.layout.tree!size [400 400] .children ->
  []
    &push that if it.left
    &push that if it.right

nodes = tree.nodes data
links = tree.links nodes

# nodes is preordered, so assign index for lookup
# TODO is there a better way to do this
for n, i of nodes
  n.preorder = i

console.log nodes
console.log data

layout-root = d3.select \#slicing-tree
  .append \svg:svg .attr width: 500 height: 500
  .append \svg:g
    .attr do
      class     : \container
      transform : 'translate(50, 50)'

link = d3.svg.diagonal!

layout-root.select-all \path.link
  .data links .enter!
  .append \svg:path
  .attr do
    class : \link
    d     : link

node-group = layout-root.select-all \g.node
  .data nodes .enter!
  .append \svg:g
  .attr do
    class     : \node
    transform : ({x, y}) -> "translate(#x, #y)"

circles = node-group.append \svg:circle
  .attr do
    class : \node-dot
    r     : 20

node-group.append \svg:text
  .attr class: \node-text
  .text -> it.node

# draw polish expr
expr-root = d3.select \#polish-expression .append \p

# postorder walk
expr = []
visit = ->
  visit that if it.left
  visit that if it.right
  expr.push it

visit data

# add postorder index
for n, i of expr
  n.postorder = i

console.log circles

# highlight node and its immediate children in both the tree and expression
set-class = (state) -> ->
  d3.select tokens.0[it.postorder] .classed \hovered state
  d3.select circles.0[it.preorder] .classed \hovered state
  d3.select "\#l#{it.preorder}"    .classed \hovered state
  if it.left
    d3.select tokens.0[that.postorder] .classed \left-hovered state
    d3.select circles.0[that.preorder] .classed \left-hovered state
    d3.select "\#l#{that.preorder}"    .classed \left-hovered state
  if it.right
    d3.select tokens.0[that.postorder] .classed \right-hovered state
    d3.select circles.0[that.preorder] .classed \right-hovered state
    d3.select "\#l#{that.preorder}"    .classed \right-hovered state

mouseover = set-class true
mouseout = set-class false

tokens = expr-root.select-all \span.token
  .data expr .enter!
  .append \span
    .attr class: \token
    .text -> it.node
    .on \mouseover mouseover
    .on \mouseout  mouseout

# highlight tokens from graph
node-group
  .on \mouseover mouseover
  .on \mouseout  mouseout

# XXX hack for manual layout SVG
for n, i of nodes
  let el = document.get-element-by-id "l#{n.preorder}"
    el.add-event-listener \mouseover ->
      mouseover.call this, n
    el.add-event-listener \mouseout ->
      mouseout.call this, n

